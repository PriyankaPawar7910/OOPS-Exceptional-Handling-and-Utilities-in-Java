/*bookmark_border
subject Codingcasino 100 points
DESCRIPTION
Problem Statement - Colour Code Validator
Main class Source should have the functionality to validate the input hexadecimal and decimal colour codes.

Create two static methods in class ColourCodeValidator as per the below signature



validateHexCode(String):int
validateDecimalCode(String):int

Both the methods return 1 for valid codes and -1 for invalid codes. Rules for valid codes are given below
Hexadecimal code rules



Format: #A1BC23
Must start with "#" symbol
Must contain six characters after #
It may contain alphabets from A-F or digits from 0-9
Decimal code rules



Format: rgb(x,y,z)
x,y and z are values from 0 to 255 inclusive
In the main method , do the following



Accept the inputs using Console as shown in the Example section
First input is choice based on which one of the static methods should be invoked
choice 1 is for validating the input hexadecimal colour code
choice 2 is for validating the input decimal colour code
Display Valid code or Invalid code based on the validation result
If the choice is neither 1 or 2, display message "Invalid choice"
Example
Sample Input:
1 #ABCDEF

Expected Output:
Valid Code
Sample Input:
2 rgb(9,99,249)

Expected Output:
Valid Code
Sample Input:
9

Expected Output:
Invalid choice*/

//CODE

import java.util.*;
import java.util.regex.*;//Provide regular expression API
class Source{
    public static int validateHexCode(String code){
    String regex = "^#([A-F0-9]{6})$";//Format of hexdecimalcolour
    Pattern p = Pattern.compile(regex);//String to compiled Format
    Matcher m = p.matcher(code);//Mtd of Pattern to read pattern
    boolean flag = m.matches();//Verifies matching pattern
    if(flag)
    return 1;
    return -1;

    }
    public static int validateDecimalCode(String s) {
    if (s.startsWith("rgb") == false) return -1;

    s = s.substring(4, s.length() - 1);//substring with x,y,z
    String str[] = s.split(",");
    if (str.length != 3) return -1;
    try {
        int x = Integer.parseInt(str[0]);
        if (x < 0 || x > 255) return -1;
        x = Integer.parseInt(str[1]);
        if (x < 0 || x > 255) return -1;
        x = Integer.parseInt(str[2]);
        if (x < 0 || x > 255) return -1;
    } catch (Exception e) {
        return -1;
        
    }
    return 1;
}

public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    if(n==1){
        String code = sc.next();
        int m = validateHexCode(code);
        if(m==1){
            System.out.println("Valid Code");
        }
        else{
            System.out.println("Invalid Code");
        }

    }
    else if(n==2){
        String code = sc.next();
        int m = validateDecimalCode(code);

        if(m==1){
            System.out.println("Valid Code");
        }
        else{
            System.out.println("Invalid Code");
        }

    }
    else{
        System.out.println("Invalid choice");
    }
    
}
}
